#include <jni.h>
#include <string>
#include <stdio.h>
#include <stdlib.h>
#include "../base/util_log.h"
#include "../base/util_type.h"
#include "../base/app_build_config.h"

extern "C" {

    jbyte sign[] = {
        48,-126,3,95,48,-126,2,71,-96,3,2,1,2,2,4,24,56,-49,-108,48,13,6,9,42,-122,72,-122,-9,13,1,1,11,5,0,48,96,49,14,48,12,6,3,85,4,6,19,5,100,101,98,117,103,49,14,48,12,6,3,85,4,8,19,5,100,101,98,117,103,49,14,48,12,6,3,85,4,7,19,5,100,101,98,117,103,49,14,48,12,6,3,85,4,10,19,5,100,101,98,117,103,49,
        14,48,12,6,3,85,4,11,19,5,100,101,98,117,103,49,14,48,12,6,3,85,4,3,19,5,100,101,98,117,103,48,30,23,13,50,48,48,53,48,51,48,48,49,50,51,52,90,23,13,52,53,48,52,50,55,48,48,49,50,51,52,90,48,96,49,14,48,12,6,3,85,4,6,19,5,100,101,98,117,103,49,14,48,12,6,3,85,4,8,19,5,100,101,98,117,103,49,14,48,
        12,6,3,85,4,7,19,5,100,101,98,117,103,49,14,48,12,6,3,85,4,10,19,5,100,101,98,117,103,49,14,48,12,6,3,85,4,11,19,5,100,101,98,117,103,49,14,48,12,6,3,85,4,3,19,5,100,101,98,117,103,48,-126,1,34,48,13,6,9,42,-122,72,-122,-9,13,1,1,1,5,0,3,-126,1,15,0,48,-126,1,10,2,-126,1,1,0,-62,58,-76,90,-1,-35,
        -52,-43,51,-33,90,-76,19,64,122,-47,-66,-32,-20,-116,-30,55,113,-122,101,-37,16,5,-3,-128,-61,-62,6,-105,28,56,85,28,-80,-64,-8,30,45,-60,-123,-89,46,-117,44,81,86,87,-117,108,23,108,26,8,-25,127,102,42,-28,126,87,110,-62,-65,-83,49,-37,120,73,-72,21,114,-126,-43,-107,-89,28,-75,16,-124,-97,-124,13,16,16,-19,47,-34,-16,-114,-109,-81,57,85,-100,-107,-121,-45,-8,-18,-65,70,
        -126,58,46,-94,94,86,-101,10,-94,24,-84,76,63,-45,-22,-97,-98,71,78,50,31,-105,-7,-122,-49,-100,-26,-25,-7,-127,-89,51,-102,-9,-56,-114,-97,49,21,-35,60,48,-9,112,-84,51,98,-63,83,9,-103,-85,-56,9,80,-119,-103,58,-122,120,-67,36,-51,-62,62,-108,32,-81,-36,89,-86,77,-103,60,1,-59,108,-13,-112,126,102,94,-29,51,-81,-122,-46,41,-77,-117,34,39,-45,-49,83,-66,-17,-109,-40,-114,
        -127,-93,-70,34,-32,-73,40,75,-96,18,-83,-12,-107,-99,-34,106,-114,108,-124,-94,-67,82,-13,45,-122,49,-115,-85,36,19,87,-116,-83,-4,-7,127,-124,-13,-27,-41,-23,51,25,52,-6,8,-73,80,92,109,2,3,1,0,1,-93,33,48,31,48,29,6,3,85,29,14,4,22,4,20,-26,-7,-24,-53,-94,66,-106,-122,84,-73,-19,-15,83,-111,106,120,71,-87,6,97,48,13,6,9,42,-122,72,-122,-9,13,
        1,1,11,5,0,3,-126,1,1,0,-74,68,127,86,-96,-40,-102,66,116,73,8,-17,-81,-35,64,82,-111,33,-46,-102,78,-11,-79,33,-44,-51,113,-121,74,24,-24,76,-76,126,-53,-29,-59,104,-87,-81,-53,-104,48,-105,-25,95,-3,56,-74,98,-98,68,90,0,-88,-1,-35,37,58,18,-40,77,-89,-46,-72,-126,78,-34,1,-18,116,-27,38,-121,-83,26,101,-80,-17,34,-4,30,-4,79,-11,101,16,4,107,-96,
        -23,-16,-32,-97,-103,-81,-36,123,-37,-12,105,-113,-62,37,80,-43,-57,8,116,-22,120,120,4,90,-64,101,120,44,-56,40,-116,-86,99,78,-49,-50,-114,-63,72,69,-122,-115,-38,-88,85,76,70,-58,110,102,64,-86,-17,109,4,-112,72,-122,-50,-64,32,-66,-64,102,-83,-89,-2,-20,109,10,12,35,55,-31,65,-29,2,54,68,-128,11,25,-55,25,-1,59,-37,-26,48,123,-121,103,117,-92,-36,84,-99,-107,-55,-87,
        11,-103,-118,-33,-113,43,-109,43,-103,23,37,106,44,-127,-15,-33,91,-2,30,100,16,-71,20,52,59,54,-2,34,-56,-113,-96,-74,18,-125,62,-35,61,-101,38,-30,80,-61,73,116,63,-100,15,-61,116,107,-77,22,21,77,40,-73,-88,-123,-8,87,-98,-111,-35,50,110,-57};

//    jint sign[] = {
//        0x30,0x82,0x03,0x5f,0x30,0x82,0x02,0x47,0xa0,0x03,0x02,0x01,0x02,0x02,0x04,0x18,0x38,0xcf,0x94,0x30,0x0d,0x06,0x09,0x2a,0x86,0x48,0x86,0xf7,0x0d,0x01,0x01,0x0b,0x05,0x00,0x30,0x60,0x31,0x0e,0x30,0x0c,0x06,0x03,0x55,0x04,0x06,0x13,0x05,0x64,0x65,0x62,0x75,0x67,0x31,0x0e,0x30,0x0c,0x06,0x03,0x55,0x04,0x08,0x13,0x05,0x64,0x65,0x62,0x75,0x67,0x31,0x0e,0x30,0x0c,0x06,0x03,0x55,0x04,0x07,0x13,0x05,0x64,0x65,0x62,0x75,0x67,0x31,0x0e,0x30,0x0c,0x06,0x03,0x55,0x04,0x0a,0x13,0x05,0x64,0x65,0x62,0x75,0x67,0x31,
//        0x0e,0x30,0x0c,0x06,0x03,0x55,0x04,0x0b,0x13,0x05,0x64,0x65,0x62,0x75,0x67,0x31,0x0e,0x30,0x0c,0x06,0x03,0x55,0x04,0x03,0x13,0x05,0x64,0x65,0x62,0x75,0x67,0x30,0x1e,0x17,0x0d,0x32,0x30,0x30,0x35,0x30,0x33,0x30,0x30,0x31,0x32,0x33,0x34,0x5a,0x17,0x0d,0x34,0x35,0x30,0x34,0x32,0x37,0x30,0x30,0x31,0x32,0x33,0x34,0x5a,0x30,0x60,0x31,0x0e,0x30,0x0c,0x06,0x03,0x55,0x04,0x06,0x13,0x05,0x64,0x65,0x62,0x75,0x67,0x31,0x0e,0x30,0x0c,0x06,0x03,0x55,0x04,0x08,0x13,0x05,0x64,0x65,0x62,0x75,0x67,0x31,0x0e,0x30,
//        0x0c,0x06,0x03,0x55,0x04,0x07,0x13,0x05,0x64,0x65,0x62,0x75,0x67,0x31,0x0e,0x30,0x0c,0x06,0x03,0x55,0x04,0x0a,0x13,0x05,0x64,0x65,0x62,0x75,0x67,0x31,0x0e,0x30,0x0c,0x06,0x03,0x55,0x04,0x0b,0x13,0x05,0x64,0x65,0x62,0x75,0x67,0x31,0x0e,0x30,0x0c,0x06,0x03,0x55,0x04,0x03,0x13,0x05,0x64,0x65,0x62,0x75,0x67,0x30,0x82,0x01,0x22,0x30,0x0d,0x06,0x09,0x2a,0x86,0x48,0x86,0xf7,0x0d,0x01,0x01,0x01,0x05,0x00,0x03,0x82,0x01,0x0f,0x00,0x30,0x82,0x01,0x0a,0x02,0x82,0x01,0x01,0x00,0xc2,0x3a,0xb4,0x5a,0xff,0xdd,
//        0xcc,0xd5,0x33,0xdf,0x5a,0xb4,0x13,0x40,0x7a,0xd1,0xbe,0xe0,0xec,0x8c,0xe2,0x37,0x71,0x86,0x65,0xdb,0x10,0x05,0xfd,0x80,0xc3,0xc2,0x06,0x97,0x1c,0x38,0x55,0x1c,0xb0,0xc0,0xf8,0x1e,0x2d,0xc4,0x85,0xa7,0x2e,0x8b,0x2c,0x51,0x56,0x57,0x8b,0x6c,0x17,0x6c,0x1a,0x08,0xe7,0x7f,0x66,0x2a,0xe4,0x7e,0x57,0x6e,0xc2,0xbf,0xad,0x31,0xdb,0x78,0x49,0xb8,0x15,0x72,0x82,0xd5,0x95,0xa7,0x1c,0xb5,0x10,0x84,0x9f,0x84,0x0d,0x10,0x10,0xed,0x2f,0xde,0xf0,0x8e,0x93,0xaf,0x39,0x55,0x9c,0x95,0x87,0xd3,0xf8,0xee,0xbf,0x46,
//        0x82,0x3a,0x2e,0xa2,0x5e,0x56,0x9b,0x0a,0xa2,0x18,0xac,0x4c,0x3f,0xd3,0xea,0x9f,0x9e,0x47,0x4e,0x32,0x1f,0x97,0xf9,0x86,0xcf,0x9c,0xe6,0xe7,0xf9,0x81,0xa7,0x33,0x9a,0xf7,0xc8,0x8e,0x9f,0x31,0x15,0xdd,0x3c,0x30,0xf7,0x70,0xac,0x33,0x62,0xc1,0x53,0x09,0x99,0xab,0xc8,0x09,0x50,0x89,0x99,0x3a,0x86,0x78,0xbd,0x24,0xcd,0xc2,0x3e,0x94,0x20,0xaf,0xdc,0x59,0xaa,0x4d,0x99,0x3c,0x01,0xc5,0x6c,0xf3,0x90,0x7e,0x66,0x5e,0xe3,0x33,0xaf,0x86,0xd2,0x29,0xb3,0x8b,0x22,0x27,0xd3,0xcf,0x53,0xbe,0xef,0x93,0xd8,0x8e,
//        0x81,0xa3,0xba,0x22,0xe0,0xb7,0x28,0x4b,0xa0,0x12,0xad,0xf4,0x95,0x9d,0xde,0x6a,0x8e,0x6c,0x84,0xa2,0xbd,0x52,0xf3,0x2d,0x86,0x31,0x8d,0xab,0x24,0x13,0x57,0x8c,0xad,0xfc,0xf9,0x7f,0x84,0xf3,0xe5,0xd7,0xe9,0x33,0x19,0x34,0xfa,0x08,0xb7,0x50,0x5c,0x6d,0x02,0x03,0x01,0x00,0x01,0xa3,0x21,0x30,0x1f,0x30,0x1d,0x06,0x03,0x55,0x1d,0x0e,0x04,0x16,0x04,0x14,0xe6,0xf9,0xe8,0xcb,0xa2,0x42,0x96,0x86,0x54,0xb7,0xed,0xf1,0x53,0x91,0x6a,0x78,0x47,0xa9,0x06,0x61,0x30,0x0d,0x06,0x09,0x2a,0x86,0x48,0x86,0xf7,0x0d,
//        0x01,0x01,0x0b,0x05,0x00,0x03,0x82,0x01,0x01,0x00,0xb6,0x44,0x7f,0x56,0xa0,0xd8,0x9a,0x42,0x74,0x49,0x08,0xef,0xaf,0xdd,0x40,0x52,0x91,0x21,0xd2,0x9a,0x4e,0xf5,0xb1,0x21,0xd4,0xcd,0x71,0x87,0x4a,0x18,0xe8,0x4c,0xb4,0x7e,0xcb,0xe3,0xc5,0x68,0xa9,0xaf,0xcb,0x98,0x30,0x97,0xe7,0x5f,0xfd,0x38,0xb6,0x62,0x9e,0x44,0x5a,0x00,0xa8,0xff,0xdd,0x25,0x3a,0x12,0xd8,0x4d,0xa7,0xd2,0xb8,0x82,0x4e,0xde,0x01,0xee,0x74,0xe5,0x26,0x87,0xad,0x1a,0x65,0xb0,0xef,0x22,0xfc,0x1e,0xfc,0x4f,0xf5,0x65,0x10,0x04,0x6b,0xa0,
//        0xe9,0xf0,0xe0,0x9f,0x99,0xaf,0xdc,0x7b,0xdb,0xf4,0x69,0x8f,0xc2,0x25,0x50,0xd5,0xc7,0x08,0x74,0xea,0x78,0x78,0x04,0x5a,0xc0,0x65,0x78,0x2c,0xc8,0x28,0x8c,0xaa,0x63,0x4e,0xcf,0xce,0x8e,0xc1,0x48,0x45,0x86,0x8d,0xda,0xa8,0x55,0x4c,0x46,0xc6,0x6e,0x66,0x40,0xaa,0xef,0x6d,0x04,0x90,0x48,0x86,0xce,0xc0,0x20,0xbe,0xc0,0x66,0xad,0xa7,0xfe,0xec,0x6d,0x0a,0x0c,0x23,0x37,0xe1,0x41,0xe3,0x02,0x36,0x44,0x80,0x0b,0x19,0xc9,0x19,0xff,0x3b,0xdb,0xe6,0x30,0x7b,0x87,0x67,0x75,0xa4,0xdc,0x54,0x9d,0x95,0xc9,0xa9,
//        0x0b,0x99,0x8a,0xdf,0x8f,0x2b,0x93,0x2b,0x99,0x17,0x25,0x6a,0x2c,0x81,0xf1,0xdf,0x5b,0xfe,0x1e,0x64,0x10,0xb9,0x14,0x34,0x3b,0x36,0xfe,0x22,0xc8,0x8f,0xa0,0xb6,0x12,0x83,0x3e,0xdd,0x3d,0x9b,0x26,0xe2,0x50,0xc3,0x49,0x74,0x3f,0x9c,0x0f,0xc3,0x74,0x6b,0xb3,0x16,0x15,0x4d,0x28,0xb7,0xa8,0x85,0xf8,0x57,0x9e,0x91,0xdd,0x32,0x6e,0xc7};

    JNIEXPORT void JNICALL Java_com_module_security_signature_Signature_verifySignature(JNIEnv *env, jobject thiz,
                                                          jobject m_context) {
        //1.PackageManager pm = mContext.getPackageManager();
        jclass      jcls_Context = (*env).GetObjectClass(m_context);
        jmethodID   jmd_getPackageManager = env->GetMethodID(jcls_Context, "getPackageManager", "()Landroid/content/pm/PackageManager;");
        jobject     jobj_packageManager = env->CallObjectMethod(m_context, jmd_getPackageManager);


        //2.mContext.getPackageName()
        jmethodID   jmd_getPackageName = env->GetMethodID(jcls_Context, "getPackageName", "()Ljava/lang/String;");
        jstring     value_packageName = static_cast<jstring>(env->CallObjectMethod(m_context, jmd_getPackageName));

        //3.PackageManager.GET_SIGNATURES
        jclass      jcls_packageManager = env->FindClass("android/content/pm/PackageManager");
        jfieldID    jfd_get_signatures = env->GetStaticFieldID(jcls_packageManager, "GET_SIGNATURES", "I");
        jint        value_get_signatures = env->GetStaticIntField(jcls_packageManager, jfd_get_signatures);

        #ifdef G_DEBUG
            const char* c_pkgName = env->GetStringUTFChars(value_packageName, NULL);
            if(c_pkgName == NULL) {
                return ; /* OutOfMemoryError already thrown */
            }
            LOGV("Testing","--A-- %s %d",c_pkgName,value_get_signatures);
            env->ReleaseStringUTFChars(value_packageName, c_pkgName);
        #endif

        //4. PackageInfo packageInfo = PackageManager.getPackageInfo(Sting packageName, int flags)
        jmethodID   jmd_getPackageInfo = env->GetMethodID(jcls_packageManager, "getPackageInfo", "(Ljava/lang/String;I)Landroid/content/pm/PackageInfo;");
        jobject     jobj_packageInfo = env->CallObjectMethod(jobj_packageManager, jmd_getPackageInfo, value_packageName, value_get_signatures);

        env->DeleteLocalRef(jcls_packageManager);
        env->DeleteLocalRef(jobj_packageManager);
        env->DeleteLocalRef(value_packageName);

        //5.Signature[0]
        jclass      jcls_packageInfo = (*env).GetObjectClass(jobj_packageInfo);
        jfieldID    jfd_signatures = env->GetFieldID(jcls_packageInfo, "signatures", "[Landroid/content/pm/Signature;");
        jobjectArray value_signatures = static_cast<jobjectArray>(env->GetObjectField(jobj_packageInfo, jfd_signatures));

        env->DeleteLocalRef(jobj_packageInfo);

        //6.校验签名是否一致（一共867个数据，可优化对签名采样验证？)）
        jsize length = env->GetArrayLength(value_signatures);
        if(length > 0){
            jobject value_signatures_0 = env->GetObjectArrayElement(value_signatures, 0);

            jclass jcls_Signature = env->FindClass("android/content/pm/Signature");
            jmethodID jm_toByteArray = env->GetMethodID(jcls_Signature, "toByteArray", "()[B");
            jbyteArray value_byteArray = static_cast<jbyteArray>(env->CallObjectMethod(value_signatures_0, jm_toByteArray));

            env->DeleteLocalRef(value_signatures_0);

            jsize length = env->GetArrayLength(value_byteArray);
            if(length > 0){
                bool ret = false;

//                jbyte *pjbyte = (jbyte *)malloc(length * sizeof(jbyte));
//                env->GetByteArrayRegion(value_byteArray, 0, length, pjbyte);
//                for(int i = 0;i<length;i++){
//                    if(pjbyte[i] != sign[i]){
//                        break;
//                    }
//                    if(i == length-1){
//                        ret = true;
//                    }
//                }
//                env->ReleaseByteArrayElements(value_byteArray,pjbyte,0);
//                free(pjbyte);

                jbyte *pjbyte = env->GetByteArrayElements(value_byteArray,NULL);
                for(int i = 0;i<length;i++){
                    if(pjbyte[i] != sign[i]){
                        break;
                    }
                    if(i == length-1){
                        ret = true;
                    }
                }
                env->ReleaseByteArrayElements(value_byteArray,pjbyte,0);

                LOGV("Testing","--B--%s %d","verify result",ret);
                if(!ret){

                    /**
                     *  Toast.makeText(context,"",Toast.LENGTH_LONG).show();
                     */

                    //弹Toast 提示
                    jclass      jcls_Toast = env->FindClass("android/widget/Toast");
                    jmethodID   jmd_Toast_makeText = env->GetStaticMethodID(jcls_Toast, "makeText", "(Landroid/content/Context;Ljava/lang/CharSequence;I)Landroid/widget/Toast;");
                    jfieldID    jfd_Toast_LENGTH_SHORT = env->GetStaticFieldID(jcls_Toast, "LENGTH_SHORT", "I");

                    jint        value_length_long = env->GetStaticIntField(jcls_Toast, jfd_Toast_LENGTH_SHORT);
                    jobject     jobj_Toast = env->CallStaticObjectMethod(jcls_Toast, jmd_Toast_makeText, m_context, env->NewStringUTF("应用校验错误，将在 5s 后关闭应用 !"), value_length_long);

                    jmethodID jmd_show = env->GetMethodID(jcls_Toast,"show", "()V");
                    env->CallVoidMethod(jobj_Toast,jmd_show);


                    env->DeleteLocalRef(jcls_Toast);
                    env->DeleteLocalRef(jobj_Toast);
                    /**
                        Intent mIntent = new Intent(this,SignErrorActivity.class);
                        mIntent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TASK | Intent.FLAG_ACTIVITY_NEW_TASK);
                        startActivity(mIntent);
                     */

                    //打开错误页面
                    jclass      jcls_Intent = env->FindClass("android/content/Intent");
                    jmethodID   jmd_Intent  = env->GetMethodID(jcls_Intent,"<init>", "(Landroid/content/Context;Ljava/lang/Class;)V");
                    jclass      jcls_SignErrorActivity = env->FindClass("com/module/security/signature/SignErrorActivity");

                    jobject     jobj_Intent = env->NewObject(jcls_Intent,jmd_Intent,m_context,jcls_SignErrorActivity);

                    jfieldID    jfd_flag_activity_clear_task = env->GetStaticFieldID(jcls_Intent, "FLAG_ACTIVITY_CLEAR_TASK", "I");
                    jint        value_flag_activity_clear_task = env->GetStaticIntField(jcls_Intent, jfd_flag_activity_clear_task);

                    jfieldID    jfd_flag_activity_new_task = env->GetStaticFieldID(jcls_Intent, "FLAG_ACTIVITY_NEW_TASK", "I");
                    jint        value_flag_activity_new_task = env->GetStaticIntField(jcls_Intent, jfd_flag_activity_new_task);

                    jmethodID   jmd_addFlags =env->GetMethodID(jcls_Intent,"addFlags","(I)Landroid/content/Intent;");
                    env->CallObjectMethod(jobj_Intent,jmd_addFlags,value_flag_activity_clear_task | value_flag_activity_new_task);

                    jmethodID  jmd_startActivity = env->GetMethodID(jcls_Context,"startActivity", "(Landroid/content/Intent;)V");
                    env->CallVoidMethod(m_context,jmd_startActivity,jobj_Intent);

                    env->DeleteLocalRef(jcls_Intent);
                    env->DeleteLocalRef(jcls_SignErrorActivity);
                    env->DeleteLocalRef(jobj_Intent);
                }

            }

            env->DeleteLocalRef(value_byteArray);
        }

        env->DeleteLocalRef(jcls_Context);
        env->DeleteLocalRef(value_signatures);
        LOGV("Testing","Java_com_module_security_signature_SignatureActivity_verifySignature success");
    }



}